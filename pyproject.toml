[build-system]
requires = ["hatchling", "hatch-vcs"]
build-backend = "hatchling.build"


[project]
name = "galactic_dynamics_interop"
authors = [
  { name = "Galactic Dynamics Interoperability Library Maintainers", email = "nstarman@users.noreply.github.com" },
]
description = "Interoperability Between Galactic Dynamics Libraries"
readme = "README.md"
license.file = "LICENSE"
requires-python = ">=3.10"
classifiers = [
  "Development Status :: 1 - Planning",
  "Intended Audience :: Science/Research",
  "Intended Audience :: Developers",
  "License :: OSI Approved :: MIT License",
  "Operating System :: OS Independent",
  "Programming Language :: Python",
  "Programming Language :: Python :: 3",
  "Programming Language :: Python :: 3 :: Only",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Topic :: Scientific/Engineering",
  "Typing :: Typed",
]
dynamic = ["version"]
dependencies = [
  "plum-dispatch",
]

[project.optional-dependencies]
all = ["galax", "gala", "galpy"]
galax = ["galax"]
gala = ["gala"]
galpy = ["galpy"]
test = [
  "pytest >=6",
  "pytest-cov >=3",
  "sybil",
]
docs = [
  "sphinx>=7.0",
  "myst_parser>=0.13",
  "sphinx_copybutton",
  "sphinx_autodoc_typehints",
  "furo>=2023.08.17",
]
dev = [
  "galactic_dynamics_interop[all]",
  "galactic_dynamics_interop[test]",
  "galactic_dynamics_interop[docs]",
]

[project.urls]
Homepage = "https://github.com/GalacticDynamics/galactic_dynamics_interop"
"Bug Tracker" = "https://github.com/GalacticDynamics/galactic_dynamics_interop/issues"
Discussions = "https://github.com/GalacticDynamics/galactic_dynamics_interop/discussions"
Changelog = "https://github.com/GalacticDynamics/galactic_dynamics_interop/releases"


[tool.hatch]
version.source = "vcs"
build.hooks.vcs.version-file = "src/galactic_dynamics_interop/_version.py"

[tool.hatch.envs.default]
features = ["test"]
scripts.test = "pytest {args}"


[tool.pytest.ini_options]
minversion = "6.0"
addopts = ["-ra", "--showlocals", "--strict-markers", "--strict-config"]
xfail_strict = true
filterwarnings = [
  "error",
]
log_cli_level = "INFO"
testpaths = [
  "tests",
]


[tool.coverage]
run.source = ["galactic_dynamics_interop"]
report.exclude_also = [
  '\.\.\.',
  'if typing.TYPE_CHECKING:',
]

[tool.mypy]
files = ["src"]
python_version = "3.10"
warn_unused_configs = true
strict = true
enable_error_code = ["ignore-without-code", "redundant-expr", "truthy-bool"]
warn_unreachable = true
disallow_untyped_defs = false
disallow_incomplete_defs = false

[[tool.mypy.overrides]]
module = "galactic_dynamics_interop.*"
disallow_untyped_defs = true
disallow_incomplete_defs = true

[[tool.mypy.overrides]]
module = "plum.*"
ignore_missing_imports = true


[tool.ruff]
src = ["src"]

[tool.ruff.lint]
extend-select = ["ALL"]
ignore = [
  "D203",     # 1 blank line required before class docstring
  "D213",     # multi-line-summary-second-line
  "ISC001",   # Conflicts with formatter
  "PLR09",    # Too many <...>
  "PLR2004",  # Magic value used in comparison
]

[tool.ruff.lint.per-file-ignores]
"tests/**" = ["ANN", "INP001", "S101", "T20"]
"noxfile.py" = ["T20"]
"docs/conf.py" = ["INP001"]



[tool.pylint]
py-version = "3.10"
ignore-paths = [".*/_version.py"]
reports.output-format = "colorized"
similarities.ignore-imports = "yes"
messages_control.disable = [
  "design",
  "fixme",
  "line-too-long",
  "missing-module-docstring",
  "missing-function-docstring",
  "wrong-import-position",
]
